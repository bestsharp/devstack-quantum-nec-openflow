# lib/trema

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace

TREMA_DIR=${TREMA_DIR:-$DEST/trema}
TREMA_TMP_DIR=${TREMA_TMP_DIR:-/tmp/trema}
SLICE_DIR="$TREMA_DIR/apps/sliceable_switch"
VAR_DIR="$TREMA_DIR/var"

SLICEABLE_PATCH="https://raw.github.com/nec-openstack/quantum-openflow-plugin/folsom/quickstart/patches/trema/0001-fixed-create_filter-in-config.cgi.patch"

TREMA_LOG_LEVEL=${TREMA_LOG_LEVEL:-info}

function install_trema_sliceable() {
    git_clone $TREMA_REPO $TREMA_DIR/trema $TREMA_BRANCH
    git_clone $TREMA_APPS_REPO $TREMA_DIR/apps $TREMA_APPS_BRANCH

    # build
    pushd $TREMA_DIR/trema
        ./build.rb
    popd
    make -C $TREMA_DIR/apps/topology
    make -C $TREMA_DIR/apps/flow_manager
    make -C $TREMA_DIR/apps/sliceable_switch
}

function configure_trema_sliceable() {
    # prepare dir
    for dir in apache db log script; do
        mkdir -p $VAR_DIR/$dir
    done
    sudo mkdir -p $TREMA_TMP_DIR
    if [ ! -w $VAR_DIR ]; then
        sudo chown -R `whoami` $VAR_DIR
    fi

    # config HTTP Server for sliceable_switch
    cat > $VAR_DIR/apache/sliceable_switch << 'END'
Listen 8888

<VirtualHost *:8888>

    DocumentRoot @VAR@/script

    <Directory />
        Options FollowSymLinks
        AllowOverride None
        Order deny,allow
        Deny from all
    </Directory>

    <Directory @VAR@/script/>
        Options +ExecCGI
        Script GET /config.cgi
        Script PUT /config.cgi
        Script POST /config.cgi
        Script DELETE /config.cgi
        AllowOverride None
        Order deny,allow
        Deny from all
    </Directory>

    <Location ~ "/(networks|filters)">
        Order allow,deny
        Allow from all
    </Location>

    RewriteEngine on
    RewriteRule ^/tenants/[^/]*/networks(.*)$  /networks$1? [QSA,PT]
    RewriteRule ^/tenants/[^/]*/filters(.*)$  /filters$1? [QSA,PT]
    RewriteRule ^/networks(.*)$ /networks$1? [QSA,L]
    RewriteRule ^/filters(.*)$ /filters$1? [QSA,L]

    AddHandler cgi-script .cgi

    ErrorLog @VAR@/log/sliceable_switch_error.log
    CustomLog @VAR@/log/sliceable_switch_access.log combined

</VirtualHost>
END
    sudo sed -i -e "s|@VAR@|$VAR_DIR|" $VAR_DIR/apache/sliceable_switch
    sudo ln -sf $VAR_DIR/apache/sliceable_switch /etc/apache2/sites-available
    sudo a2enmod rewrite actions
    sudo a2ensite sliceable_switch
}

function start_trema_sliceable() {
    # deploy files
    pushd $SLICE_DIR
        rm -f filter.db  slice.db
        ./create_tables.sh
        mv filter.db  slice.db $VAR_DIR/db/
        cp Slice.pm Filter.pm config.cgi $VAR_DIR/script/
    popd
    sed -i -e "s|/home/sliceable_switch/db|$VAR_DIR/db|" \
        $VAR_DIR/script/config.cgi
    cp $SLICE_DIR/sliceable_switch_null.conf $VAR_DIR/sliceable.conf
    sed -i -e "s|../apps/sliceable_switch/slice.db|$VAR_DIR/db/slice.db|" \
           -e "s|../apps/sliceable_switch/filter.db|$VAR_DIR/db/filter.db|" \
           $VAR_DIR/sliceable.conf
    sudo chown -R www-data.www-data $VAR_DIR

    # reload apache
    sudo /etc/init.d/apache2 reload

    # start trema
    pushd $TREMA_DIR/trema
        sudo ./trema killall
        sudo LOGGING_LEVEL=$TREMA_LOG_LEVEL TREMA_TMP=$TREMA_TMP_DIR \
	    ./trema run -d -c $VAR_DIR/sliceable.conf
    popd
}

function stop_trema_sliceable() {
    :
}

function setup_ovs_tunnels() {
    local id=0
    if [ -n "$GRE_REMOTE_IPS" ]; then
         for ip in ${GRE_REMOTE_IPS//:/ }
         do
             sudo ovs-vsctl --no-wait add-port $OVS_BRIDGE gre$id -- \
                 set Interface gre$id type=gre options:remote_ip=$ip
             id=`expr $id + 1`
         done
    fi
}

# Restore xtrace
$XTRACE
